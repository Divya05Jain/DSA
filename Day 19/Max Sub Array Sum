#include <iostream>
#include <vector>
#include <climits> // For INT_MIN

using namespace std;

int maxSubArraySum(vector<int>& nums) {
    int maxSum = INT_MIN; // Stores the maximum subarray sum
    int currentSum = 0;   // Running sum of the current subarray

    for (int i = 0; i < nums.size(); i++) {
        currentSum += nums[i];         // Add the current element to the running sum
        maxSum = max(maxSum, currentSum); // Update the maximum sum if currentSum is greater

        if (currentSum < 0) {          // Reset the running sum if it goes below 0
            currentSum = 0;
        }
    }

    return maxSum;
}

int main() {
    vector<int> nums = {-2, 1, -3, 4, -1, 2, 1, -5, 4};
    cout << "Maximum Subarray Sum: " << maxSubArraySum(nums) << endl;
    return 0;
}
